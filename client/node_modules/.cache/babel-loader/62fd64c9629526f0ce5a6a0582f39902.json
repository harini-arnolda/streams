{"ast":null,"code":"var _jsxFileName = \"/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(streams => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: streams.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, this.renderAdmin(streams), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, streams.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, streams.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"streams/new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","textAlign","render","console","log","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF;AAUD;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBD,OAAO,IAAI;AACvC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,OAAO,CAACE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,WAAL,CAAiBK,OAAjB,CADH,eAEE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACG,KADX,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BH,OAAO,CAACI,WAAtC,CAFF,CAHF,CADF;AAUD,KAXM,CAAP;AAYD;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKX,KAAL,CAAWY,UAAf,EAA2B;AACzB,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWM,OAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEF;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKD,UAAL,EAAjC,CAFE,CADF;AAMD;;AArDsC;;AAwDzC,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,OAAO,EAAEa,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACZ,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAEc,KAAK,CAACG,IAAN,CAAWlB,MAFrB;AAGLS,IAAAA,UAAU,EAAEM,KAAK,CAACG,IAAN,CAAWT;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAelB,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">\n            Edit\n          </button>\n          <button className=\"ui button delete\">\n            Delete\n          </button>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(streams => {\n      return (\n        <div className=\"item\" key={streams.id}>\n          {this.renderAdmin(streams)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {streams.title}\n            <div className=\"description\">{streams.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"streams/new\">Create Stream</Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    console.log(this.props.streams)\n    return (\n      <div>\n        <h2>Streams</h2>\n    <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}