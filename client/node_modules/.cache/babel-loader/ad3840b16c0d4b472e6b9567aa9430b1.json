{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FTECH_STREAM, EDIT_STREAM, DELETE_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async dispatch => {\n    const response = await streams.post('/streams', formValues);\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FTECH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteSTream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FTECH_STREAM","EDIT_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteSTream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,YAA1D,EAAwEC,WAAxE,EAAqFC,aAArF,QAAyG,SAAzG;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAACP,aAAP;AAAsBQ,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AAEAL,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKR,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACwB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA6BR,UAA7B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,WAAR;AAAqBK,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACpD,QAAMf,OAAO,CAAC0B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,aAAR;AAAuBI,IAAAA,OAAO,EAAEW;AAAhC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from '../apis/streams'\nimport  {SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FTECH_STREAM, EDIT_STREAM, DELETE_STREAM} from './types';\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = (formValues) => {\n  return async (dispatch) => {\n    const response = await streams.post('/streams', formValues);\n\n    dispatch({ type:CREATE_STREAM, payload: response.data });\n  }\n}\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: FTECH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`,formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data})\n}\n\nexport const deleteSTream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id})\n}"]},"metadata":{},"sourceType":"module"}