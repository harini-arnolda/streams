{"ast":null,"code":"var _jsxFileName = \"/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-dom';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete?';\n    }\n\n    return `Are you sure you want to delete stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","deleteStream","Link","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAM;AAACD,MAAAA;AAAD,QAAO,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAA9B;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAEDG,EAAAA,aAAa,GAAG;AACd,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAuB;AACrB,aAAO,kCAAP;AACD;;AAED,WAAQ,sDAAqD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAArF;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,eAAb;AACE,MAAA,OAAO,EAAE,KAAKH,aAAL,EADX;AAEE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAFX;AAGE,MAAA,SAAS,EAAG,MAAMX,OAAO,CAACgB,IAAR,CAAa,GAAb,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMD;;AA9BwC;;AAiC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDE,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-dom';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const {id} = this.props.match.params\n    return(\n      <React.Fragment>\n        \n        <Link to=\"/\" className=\"ui button\">Cancel</Link>\n      </React.Fragment>\n    );\n  }\n\n  renderContent() {\n    if(!this.props.stream) {\n      return 'Are you sure you want to delete?';\n    }\n\n    return `Are you sure you want to delete stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return (\n        <Modal title=\"Delete Stream\" \n          content={this.renderContent()} \n          actions={this.renderActions()}\n          onDismiss={ () => history.push('/') }/>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}