{"ast":null,"code":"var _jsxFileName = \"/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      window.gapi.auth2.getAuthInstance().signIn();\n    };\n\n    this.onSignOutClick = () => {\n      window.gapi.auth2.getAuthInstance().signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.auth2.init({\n        clientId: '500899028401-7dlh1v2nfvgkfrigk87f4fqjepnrn98c.apps.googleusercontent.com',\n        scpoe: 'email'\n      }).then(() => {\n        this.setState({\n          isSignedIn: window.gapi.auth2.getAuthInstance().isSignedIn.get()\n        });\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    console.log('isisgnedin ', this.state.isSignedIn);\n\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), \"Sign Out\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = props => {\n  return {\n    isisgnedin: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/HariniArnolda/Desktop/projects/modern_react_with_redux/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","onSignInClick","window","gapi","auth2","getAuthInstance","onSignOutClick","componentDidMount","load","init","clientId","scpoe","then","setState","get","listen","renderAuthButton","console","log","render","mapStateToProps","isisgnedin","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AAACC,MAAAA,UAAU,EAAE;AAAb,KAF+B;;AAAA,SAiBvCC,YAjBuC,GAiBvBD,UAAD,IAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,aAAKE,KAAL,CAAWP,MAAX;AACD,OAFD,MAEO;AACL,aAAKO,KAAL,CAAWN,OAAX;AACD;AACF,KAvBsC;;AAAA,SAyBvCO,aAzBuC,GAyBvB,MAAM;AACpBC,MAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,GAAoCZ,MAApC;AACD,KA3BsC;;AAAA,SA6BvCa,cA7BuC,GA6BtB,MAAM;AACrBJ,MAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,GAAoCX,OAApC;AACD,KA/BsC;AAAA;;AAKvCa,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,MAAM,CAACC,IAAP,CAAYK,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCN,MAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBK,IAAlB,CAAuB;AACrBC,QAAAA,QAAQ,EAAE,0EADW;AAErBC,QAAAA,KAAK,EAAE;AAFc,OAAvB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKC,QAAL,CAAc;AAAEf,UAAAA,UAAU,EAAEI,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,GAAoCP,UAApC,CAA+CgB,GAA/C;AAAd,SAAd;AACAZ,QAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,GAAoCP,UAApC,CAA+CiB,MAA/C,CAAsD,KAAKhB,YAA3D;AACD,OAND;AAOD,KARD;AASD;;AAkBDiB,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKrB,KAAL,CAAWC,UAAtC;;AACA,QAAG,KAAKD,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC;AACjC,aAAO,IAAP;AACD,KAFD,MAEO,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAA0B;AAC/B,0BAAQ;AAAQ,QAAA,OAAO,EAAE,KAAKQ,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,aAAR;AAID,KALM,MAKA;AACL,0BAAQ;AAAQ,QAAA,OAAO,EAAE,KAAKL,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,wBAAR;AAID;AACF;;AAGDkB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKH,gBAAL,EAAN,CAAP;AACD;;AArDsC;;AAwDzC,MAAMI,eAAe,GAAIpB,KAAD,IAAW;AACjC,SAAO;AAAEqB,IAAAA,UAAU,EAAExB,KAAK,CAACyB,IAAN,CAAWxB;AAAzB,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n  state = {isSignedIn: null};\n\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.auth2.init({\n        clientId: '500899028401-7dlh1v2nfvgkfrigk87f4fqjepnrn98c.apps.googleusercontent.com',\n        scpoe: 'email'\n      }).then(() => {\n        this.setState({ isSignedIn: window.gapi.auth2.getAuthInstance().isSignedIn.get() });\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  }\n\n  onSignInClick = () => {\n    window.gapi.auth2.getAuthInstance().signIn();\n  };\n\n  onSignOutClick = () => {\n    window.gapi.auth2.getAuthInstance().signOut();\n  };\n\n  renderAuthButton() {\n    console.log('isisgnedin ', this.state.isSignedIn)\n    if(this.state.isSignedIn === null) {\n      return null;\n    } else if(this.state.isSignedIn) {\n      return (<button onClick={this.onSignOutClick} className=\"ui red google button\">\n        <i className=\"google icon\" />\n        Sign Out\n      </button>);\n    } else {\n      return (<button onClick={this.onSignInClick} className=\"ui red google button\">\n        <i className=\"google icon\" />\n        Sign In with Google\n      </button>);\n    }\n  }\n\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (props) => {\n  return { isisgnedin: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}